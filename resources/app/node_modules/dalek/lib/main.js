function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { var callNext = step.bind(null, 'next'); var callThrow = step.bind(null, 'throw'); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(callNext, callThrow); } } callNext(); }); }; }

/** @babel */

var dalek = require('./dalek');
var Grim = require('grim');

module.exports = {
  activate: function activate() {
    atom.packages.onDidActivateInitialPackages(_asyncToGenerator(function* () {
      var duplicates = yield dalek.enumerate();
      for (var i = 0; i < duplicates.length; i++) {
        var duplicate = duplicates[i];
        Grim.deprecate('You have the core package "' + duplicate + '" installed as a community package. See https://github.com/atom/dalek for how this causes problems and instructions on how to correct the situation.', { packageName: duplicate });
      }
    }));
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vQzovcHJvamVjdHMvYXRvbS9vdXQvYXBwL25vZGVfbW9kdWxlcy9kYWxlay9saWIvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFBO0FBQ2hDLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTs7QUFFNUIsTUFBTSxDQUFDLE9BQU8sR0FBRztBQUNmLFVBQVEsRUFBQyxvQkFBRztBQUNWLFFBQUksQ0FBQyxRQUFRLENBQUMsNEJBQTRCLG1CQUFDLGFBQVk7QUFDckQsVUFBTSxVQUFVLEdBQUcsTUFBTSxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUE7QUFDMUMsV0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDMUMsWUFBTSxTQUFTLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQy9CLFlBQUksQ0FBQyxTQUFTLGlDQUNrQixTQUFTLDJKQUN2QyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsQ0FDM0IsQ0FBQTtPQUNGO0tBQ0YsRUFBQyxDQUFBO0dBQ0g7Q0FDRixDQUFBIiwiZmlsZSI6ImZpbGU6Ly8vQzovcHJvamVjdHMvYXRvbS9vdXQvYXBwL25vZGVfbW9kdWxlcy9kYWxlay9saWIvbWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAYmFiZWwgKi9cblxuY29uc3QgZGFsZWsgPSByZXF1aXJlKCcuL2RhbGVrJylcbmNvbnN0IEdyaW0gPSByZXF1aXJlKCdncmltJylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFjdGl2YXRlICgpIHtcbiAgICBhdG9tLnBhY2thZ2VzLm9uRGlkQWN0aXZhdGVJbml0aWFsUGFja2FnZXMoYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgZHVwbGljYXRlcyA9IGF3YWl0IGRhbGVrLmVudW1lcmF0ZSgpXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGR1cGxpY2F0ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgZHVwbGljYXRlID0gZHVwbGljYXRlc1tpXVxuICAgICAgICBHcmltLmRlcHJlY2F0ZShcbiAgICAgICAgICBgWW91IGhhdmUgdGhlIGNvcmUgcGFja2FnZSBcIiR7ZHVwbGljYXRlfVwiIGluc3RhbGxlZCBhcyBhIGNvbW11bml0eSBwYWNrYWdlLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2F0b20vZGFsZWsgZm9yIGhvdyB0aGlzIGNhdXNlcyBwcm9ibGVtcyBhbmQgaW5zdHJ1Y3Rpb25zIG9uIGhvdyB0byBjb3JyZWN0IHRoZSBzaXR1YXRpb24uYCxcbiAgICAgICAgICB7IHBhY2thZ2VOYW1lOiBkdXBsaWNhdGUgfVxuICAgICAgICApXG4gICAgICB9XG4gICAgfSlcbiAgfVxufVxuIl19