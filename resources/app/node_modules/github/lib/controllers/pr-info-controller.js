'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _desc, _value, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _coreDecorators = require('core-decorators');

var _propTypes3 = require('../prop-types');

var _relayRootContainer = require('../containers/relay-root-container');

var _relayRootContainer2 = _interopRequireDefault(_relayRootContainer);

var _prSelectionByUrlContainer = require('../containers/pr-selection-by-url-container');

var _prSelectionByUrlContainer2 = _interopRequireDefault(_prSelectionByUrlContainer);

var _prSelectionByBranchContainer = require('../containers/pr-selection-by-branch-container');

var _prSelectionByBranchContainer2 = _interopRequireDefault(_prSelectionByBranchContainer);

var _githubLoginView = require('../views/github-login-view');

var _githubLoginView2 = _interopRequireDefault(_githubLoginView);

var _prInfoByBranchRoute = require('../routes/pr-info-by-branch-route');

var _prInfoByBranchRoute2 = _interopRequireDefault(_prInfoByBranchRoute);

var _prInfoByUrlRoute = require('../routes/pr-info-by-url-route');

var _prInfoByUrlRoute2 = _interopRequireDefault(_prInfoByUrlRoute);

var _relayNetworkLayerManager = require('../relay-network-layer-manager');

var _relayNetworkLayerManager2 = _interopRequireDefault(_relayNetworkLayerManager);

var _githubLoginModel = require('../models/github-login-model');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

let PrInfoController = (_class = (_temp = _class2 = class PrInfoController extends _react2.default.Component {

  render() {
    if (this.props.token === _githubLoginModel.UNAUTHENTICATED) {
      return null;
    }

    if (this.props.selectedPrUrl) {
      return this.renderSpecificPr();
    } else {
      return this.renderPrByBranchName();
    }
  }

  renderSpecificPr() {
    var _props = this.props;
    const token = _props.token,
          host = _props.host;


    const route = new _prInfoByUrlRoute2.default({
      prUrl: this.props.selectedPrUrl
    });

    const environment = _relayNetworkLayerManager2.default.getEnvironmentForHost(host, token);
    const Component = _prSelectionByUrlContainer2.default;

    return _react2.default.createElement(_relayRootContainer2.default, {
      Component: Component,
      route: route,
      environment: environment,
      renderFetched: props => {
        return _react2.default.createElement(Component, _extends({}, props, { onSelectPr: this.props.onSelectPr, onUnpinPr: this.props.onUnpinPr }));
      },
      renderLoading: this.renderLoading,
      renderFailure: this.renderSpecificPrFailure
    });
  }

  renderPrByBranchName() {
    var _props2 = this.props;
    const token = _props2.token,
          host = _props2.host;


    const route = new _prInfoByBranchRoute2.default({
      repoOwner: this.props.remote.getOwner(),
      repoName: this.props.remote.getRepo(),
      branchName: this.props.currentBranchName
    });

    const environment = _relayNetworkLayerManager2.default.getEnvironmentForHost(host, token);
    const Component = _prSelectionByBranchContainer2.default;

    return _react2.default.createElement(_relayRootContainer2.default, {
      Component: Component,
      route: route,
      environment: environment,
      renderFetched: props => {
        return _react2.default.createElement(Component, _extends({}, props, { onSelectPr: this.props.onSelectPr, onUnpinPr: this.props.onUnpinPr }));
      },
      renderLoading: this.renderLoading,
      renderFailure: this.renderFailure
    });
  }

  renderLoading() {
    return _react2.default.createElement(
      'div',
      { className: 'github-Loader' },
      _react2.default.createElement('span', { className: 'github-Spinner' })
    );
  }

  renderSpecificPrFailure(err, retry) {
    if (this.isNotFoundError(err)) {
      return _react2.default.createElement(_prSelectionByUrlContainer2.default, {
        prUrl: this.props.selectedPrUrl,
        query: null,
        onSelectPr: this.props.onSelectPr,
        onUnpinPr: this.props.onUnpinPr
      });
    } else {
      return this.renderFailure(err, retry);
    }
  }

  renderFailure(err, retry) {
    if (err.response && err.response.status === 401) {
      return _react2.default.createElement(
        'div',
        { className: 'github-GithubLoginView-Container' },
        _react2.default.createElement(
          _githubLoginView2.default,
          { onLogin: this.props.onLogin },
          _react2.default.createElement(
            'p',
            null,
            'The API endpoint returned a unauthorized error. Please try to re-authenticate with the endpoint.'
          )
        )
      );
    } else {
      return _react2.default.createElement(
        'div',
        { className: 'unknown-fatal-error' },
        _react2.default.createElement(
          'div',
          null,
          'An unknown error occurred.'
        ),
        _react2.default.createElement(
          'button',
          { onClick: retry },
          'Try Again'
        )
      );
    }
  }

  isNotFoundError(err) {
    return err.source && err.source.errors && err.source.errors[0] && err.source.errors[0].type === 'NOT_FOUND';
  }
}, _class2.propTypes = {
  token: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.symbol]).isRequired,
  host: _propTypes2.default.string.isRequired,
  currentBranchName: _propTypes2.default.string.isRequired,
  onLogin: _propTypes2.default.func.isRequired,
  remote: _propTypes3.RemotePropType.isRequired,
  onSelectPr: _propTypes2.default.func.isRequired,
  selectedPrUrl: _propTypes2.default.string,
  onUnpinPr: _propTypes2.default.func.isRequired
}, _temp), (_applyDecoratedDescriptor(_class.prototype, 'renderLoading', [_coreDecorators.autobind], Object.getOwnPropertyDescriptor(_class.prototype, 'renderLoading'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'renderSpecificPrFailure', [_coreDecorators.autobind], Object.getOwnPropertyDescriptor(_class.prototype, 'renderSpecificPrFailure'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'renderFailure', [_coreDecorators.autobind], Object.getOwnPropertyDescriptor(_class.prototype, 'renderFailure'), _class.prototype)), _class);
exports.default = PrInfoController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,