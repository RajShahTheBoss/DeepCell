Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _templateObject = _taggedTemplateLiteral(['\n      Loaded ', ' packages in ', 'ms.\n      ', ' took longer than 5ms to load.\n    '], ['\n      Loaded ', ' packages in ', 'ms.\n      ', ' took longer than 5ms to load.\n    ']),
    _templateObject2 = _taggedTemplateLiteral(['\n      Activated ', ' packages in ', 'ms.\n      ', ' took longer than 5ms to activate.    '], ['\n      Activated ', ' packages in ', 'ms.\n      ', ' took longer than 5ms to activate.\\\n    ']),
    _templateObject3 = _taggedTemplateLiteral(['\n      Loaded ', ' themes in ', 'ms.\n      ', ' took longer than 5ms to load.    '], ['\n      Loaded ', ' themes in ', 'ms.\n      ', ' took longer than 5ms to load.\\\n    ']),
    _templateObject4 = _taggedTemplateLiteral(['\n      Activated ', ' themes in ', 'ms.\n      ', ' took longer than 5ms to activate.    '], ['\n      Activated ', ' themes in ', 'ms.\n      ', ' took longer than 5ms to activate.\\\n    ']);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

/** @babel */
/** @jsx etch.dom */

var _underscorePlus = require('underscore-plus');

var _underscorePlus2 = _interopRequireDefault(_underscorePlus);

var _dedent = require('dedent');

var _dedent2 = _interopRequireDefault(_dedent);

var _atom = require('atom');

var _etch = require('etch');

var _etch2 = _interopRequireDefault(_etch);

var _cachePanelView = require('./cache-panel-view');

var _cachePanelView2 = _interopRequireDefault(_cachePanelView);

var _packagePanelView = require('./package-panel-view');

var _packagePanelView2 = _interopRequireDefault(_packagePanelView);

var _windowPanelView = require('./window-panel-view');

var _windowPanelView2 = _interopRequireDefault(_windowPanelView);

var TimecopView = (function () {
  function TimecopView(_ref) {
    var _this = this;

    var uri = _ref.uri;

    _classCallCheck(this, TimecopView);

    this.uri = uri;
    _etch2['default'].initialize(this);
    if (atom.packages.getActivePackages().length > 0) {
      this.populateViews();
    } else {
      // Render on next tick so packages have been activated
      setImmediate(function () {
        _this.populateViews();
      });
    }
  }

  _createClass(TimecopView, [{
    key: 'update',
    value: function update() {}
  }, {
    key: 'destroy',
    value: function destroy() {
      return _etch2['default'].destroy(this);
    }
  }, {
    key: 'render',
    value: function render() {
      return _etch2['default'].dom(
        'div',
        { className: 'timecop pane-item native-key-bindings', tabIndex: '-1' },
        _etch2['default'].dom(
          'div',
          { className: 'timecop-panel' },
          _etch2['default'].dom(
            'div',
            { className: 'panels' },
            _etch2['default'].dom(_windowPanelView2['default'], { ref: 'windowLoadingPanel' }),
            _etch2['default'].dom(_cachePanelView2['default'], { ref: 'cacheLoadingPanel' })
          ),
          _etch2['default'].dom(
            'div',
            { className: 'panels' },
            _etch2['default'].dom(_packagePanelView2['default'], { ref: 'packageLoadingPanel', title: 'Package Loading' }),
            _etch2['default'].dom(_packagePanelView2['default'], { ref: 'packageActivationPanel', title: 'Package Activation' }),
            _etch2['default'].dom(_packagePanelView2['default'], { ref: 'themeLoadingPanel', title: 'Theme Loading' }),
            _etch2['default'].dom(_packagePanelView2['default'], { ref: 'themeActivationPanel', title: 'Theme Activation' })
          )
        )
      );
    }
  }, {
    key: 'populateViews',
    value: function populateViews() {
      this.refs.windowLoadingPanel.populate();
      this.refs.cacheLoadingPanel.populate();
      this.showLoadedPackages();
      this.showActivePackages();
      this.showLoadedThemes();
      this.showActiveThemes();
    }
  }, {
    key: 'showLoadedPackages',
    value: function showLoadedPackages() {
      var _getSlowPackages = this.getSlowPackages(atom.packages.getLoadedPackages().filter(function (pack) {
        return pack.getType() !== 'theme';
      }), 'loadTime');

      var time = _getSlowPackages.time;
      var count = _getSlowPackages.count;
      var packages = _getSlowPackages.packages;

      this.refs.packageLoadingPanel.addPackages(packages, 'loadTime');
      this.refs.packageLoadingPanel.refs.summary.textContent = (0, _dedent2['default'])(_templateObject, count, time, _underscorePlus2['default'].pluralize(packages.length, 'package'));
    }
  }, {
    key: 'showActivePackages',
    value: function showActivePackages() {
      var _getSlowPackages2 = this.getSlowPackages(atom.packages.getActivePackages().filter(function (pack) {
        return pack.getType() !== 'theme';
      }), 'activateTime');

      var time = _getSlowPackages2.time;
      var count = _getSlowPackages2.count;
      var packages = _getSlowPackages2.packages;

      this.refs.packageActivationPanel.addPackages(packages, 'activateTime');
      this.refs.packageActivationPanel.refs.summary.textContent = (0, _dedent2['default'])(_templateObject2, count, time, _underscorePlus2['default'].pluralize(packages.length, 'package'));
    }
  }, {
    key: 'showLoadedThemes',
    value: function showLoadedThemes() {
      var _getSlowPackages3 = this.getSlowPackages(atom.themes.getLoadedThemes(), 'loadTime');

      var time = _getSlowPackages3.time;
      var count = _getSlowPackages3.count;
      var packages = _getSlowPackages3.packages;

      this.refs.themeLoadingPanel.addPackages(packages, 'loadTime');
      this.refs.themeLoadingPanel.refs.summary.textContent = (0, _dedent2['default'])(_templateObject3, count, time, _underscorePlus2['default'].pluralize(packages.length, 'theme'));
    }
  }, {
    key: 'showActiveThemes',
    value: function showActiveThemes() {
      var _getSlowPackages4 = this.getSlowPackages(atom.themes.getActiveThemes(), 'activateTime');

      var time = _getSlowPackages4.time;
      var count = _getSlowPackages4.count;
      var packages = _getSlowPackages4.packages;

      this.refs.themeActivationPanel.addPackages(packages, 'activateTime');
      this.refs.themeActivationPanel.refs.summary.textContent = (0, _dedent2['default'])(_templateObject4, count, time, _underscorePlus2['default'].pluralize(packages.length, 'theme'));
    }
  }, {
    key: 'getSlowPackages',
    value: function getSlowPackages(packages, timeKey) {
      var time = 0;
      var count = 0;
      packages = packages.filter(function (pack) {
        time += pack[timeKey];
        count++;
        return pack[timeKey] > 5;
      });
      packages.sort(function (pack1, pack2) {
        return pack2[timeKey] - pack1[timeKey];
      });
      return { time: time, count: count, packages: packages };
    }
  }, {
    key: 'serialize',
    value: function serialize() {
      return {
        deserializer: this.constructor.name,
        uri: this.getURI()
      };
    }
  }, {
    key: 'getURI',
    value: function getURI() {
      return this.uri;
    }
  }, {
    key: 'getTitle',
    value: function getTitle() {
      return 'Timecop';
    }
  }, {
    key: 'getIconName',
    value: function getIconName() {
      return 'dashboard';
    }
  }, {
    key: 'onDidChangeTitle',
    value: function onDidChangeTitle() {
      return new _atom.Disposable(function () {});
    }
  }, {
    key: 'onDidChangeModified',
    value: function onDidChangeModified() {
      return new _atom.Disposable(function () {});
    }
  }]);

  return TimecopView;
})();

exports['default'] = TimecopView;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,