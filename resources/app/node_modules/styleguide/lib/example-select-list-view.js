Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _templateObject = _taggedTemplateLiteral(['\n    import SelectListView from \'atom-select-list\'\n\n    const selectListView = new SelectListView({\n      items: [\'one\', \'two\', \'three\'],\n      elementForItem: (item) => {\n        const li = document.createElement(\'li\')\n        li.textContent = item\n        return li\n      },\n      didConfirmSelection: (item) => {\n        console.log(\'confirmed\', item)\n      },\n      didCancelSelection: () => {\n        console.log(\'cancelled\')\n      }\n    })\n    '], ['\n    import SelectListView from \'atom-select-list\'\n\n    const selectListView = new SelectListView({\n      items: [\'one\', \'two\', \'three\'],\n      elementForItem: (item) => {\n        const li = document.createElement(\'li\')\n        li.textContent = item\n        return li\n      },\n      didConfirmSelection: (item) => {\n        console.log(\'confirmed\', item)\n      },\n      didCancelSelection: () => {\n        console.log(\'cancelled\')\n      }\n    })\n    ']);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

/** @babel */
/** @jsx etch.dom */

var _atomSelectList = require('atom-select-list');

var _atomSelectList2 = _interopRequireDefault(_atomSelectList);

var _etch = require('etch');

var _etch2 = _interopRequireDefault(_etch);

var _dedent = require('dedent');

var _dedent2 = _interopRequireDefault(_dedent);

var _codeBlock = require('./code-block');

var _codeBlock2 = _interopRequireDefault(_codeBlock);

var ExampleSelectListView = (function () {
  function ExampleSelectListView() {
    _classCallCheck(this, ExampleSelectListView);

    this.jsExampleCode = (0, _dedent2['default'])(_templateObject);
    _etch2['default'].initialize(this);
  }

  _createClass(ExampleSelectListView, [{
    key: 'elementForItem',
    value: function elementForItem(item) {
      var li = document.createElement('li');
      li.textContent = item;
      return li;
    }
  }, {
    key: 'didConfirmSelection',
    value: function didConfirmSelection(item) {
      console.log('confirmed', item);
    }
  }, {
    key: 'didCancelSelection',
    value: function didCancelSelection() {
      console.log('cancelled');
    }
  }, {
    key: 'render',
    value: function render() {
      return _etch2['default'].dom(
        'div',
        { className: 'example' },
        _etch2['default'].dom(
          'div',
          { className: 'example-rendered' },
          _etch2['default'].dom(
            'atom-panel',
            { className: 'modal' },
            _etch2['default'].dom(_atomSelectList2['default'], {
              items: ['one', 'two', 'three'],
              elementForItem: this.elementForItem.bind(this),
              onDidConfirmSelection: this.didConfirmSelection.bind(this),
              onDidCancelSelection: this.didCancelSelection.bind(this) })
          )
        ),
        _etch2['default'].dom(
          'div',
          { className: 'example-code show-example-space-pen' },
          _etch2['default'].dom(_codeBlock2['default'], { cssClass: 'example-space-pen', grammarScopeName: 'source.js', code: this.jsExampleCode })
        )
      );
    }
  }, {
    key: 'update',
    value: function update() {}
  }]);

  return ExampleSelectListView;
})();

exports['default'] = ExampleSelectListView;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vQzovcHJvamVjdHMvYXRvbS9vdXQvYXBwL25vZGVfbW9kdWxlcy9zdHlsZWd1aWRlL2xpYi9leGFtcGxlLXNlbGVjdC1saXN0LXZpZXcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OEJBRzJCLGtCQUFrQjs7OztvQkFDNUIsTUFBTTs7OztzQkFDSixRQUFROzs7O3lCQUNMLGNBQWM7Ozs7SUFFZixxQkFBcUI7QUFDNUIsV0FETyxxQkFBcUIsR0FDekI7MEJBREkscUJBQXFCOztBQUV0QyxRQUFJLENBQUMsYUFBYSw0Q0FpQmpCLENBQUE7QUFDRCxzQkFBSyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUE7R0FDdEI7O2VBckJrQixxQkFBcUI7O1dBdUJ6Qix3QkFBQyxJQUFJLEVBQUU7QUFDcEIsVUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUN2QyxRQUFFLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQTtBQUNyQixhQUFPLEVBQUUsQ0FBQTtLQUNWOzs7V0FFbUIsNkJBQUMsSUFBSSxFQUFFO0FBQ3pCLGFBQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFBO0tBQy9COzs7V0FFa0IsOEJBQUc7QUFDcEIsYUFBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQTtLQUN6Qjs7O1dBRU0sa0JBQUc7QUFDUixhQUNFOztVQUFLLFNBQVMsRUFBQyxTQUFTO1FBQ3RCOztZQUFLLFNBQVMsRUFBQyxrQkFBa0I7VUFDL0I7O2NBQVksU0FBUyxFQUFDLE9BQU87WUFDM0I7QUFDRSxtQkFBSyxFQUFFLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQUFBQztBQUMvQiw0QkFBYyxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxBQUFDO0FBQy9DLG1DQUFxQixFQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEFBQUM7QUFDM0Qsa0NBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQUFBQyxHQUFHO1dBQ25EO1NBQ1Q7UUFDTjs7WUFBSyxTQUFTLEVBQUMscUNBQXFDO1VBQ2xELGdEQUFXLFFBQVEsRUFBQyxtQkFBbUIsRUFBQyxnQkFBZ0IsRUFBQyxXQUFXLEVBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFhLEFBQUMsR0FBRztTQUM3RjtPQUNGLENBQ1A7S0FDRjs7O1dBRU0sa0JBQUcsRUFFVDs7O1NBMURrQixxQkFBcUI7OztxQkFBckIscUJBQXFCIiwiZmlsZSI6ImZpbGU6Ly8vQzovcHJvamVjdHMvYXRvbS9vdXQvYXBwL25vZGVfbW9kdWxlcy9zdHlsZWd1aWRlL2xpYi9leGFtcGxlLXNlbGVjdC1saXN0LXZpZXcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGJhYmVsICovXG4vKiogQGpzeCBldGNoLmRvbSAqL1xuXG5pbXBvcnQgU2VsZWN0TGlzdFZpZXcgZnJvbSAnYXRvbS1zZWxlY3QtbGlzdCdcbmltcG9ydCBldGNoIGZyb20gJ2V0Y2gnXG5pbXBvcnQgZGVkZW50IGZyb20gJ2RlZGVudCdcbmltcG9ydCBDb2RlQmxvY2sgZnJvbSAnLi9jb2RlLWJsb2NrJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeGFtcGxlU2VsZWN0TGlzdFZpZXcge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgdGhpcy5qc0V4YW1wbGVDb2RlID0gZGVkZW50YFxuICAgIGltcG9ydCBTZWxlY3RMaXN0VmlldyBmcm9tICdhdG9tLXNlbGVjdC1saXN0J1xuXG4gICAgY29uc3Qgc2VsZWN0TGlzdFZpZXcgPSBuZXcgU2VsZWN0TGlzdFZpZXcoe1xuICAgICAgaXRlbXM6IFsnb25lJywgJ3R3bycsICd0aHJlZSddLFxuICAgICAgZWxlbWVudEZvckl0ZW06IChpdGVtKSA9PiB7XG4gICAgICAgIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKVxuICAgICAgICBsaS50ZXh0Q29udGVudCA9IGl0ZW1cbiAgICAgICAgcmV0dXJuIGxpXG4gICAgICB9LFxuICAgICAgZGlkQ29uZmlybVNlbGVjdGlvbjogKGl0ZW0pID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ2NvbmZpcm1lZCcsIGl0ZW0pXG4gICAgICB9LFxuICAgICAgZGlkQ2FuY2VsU2VsZWN0aW9uOiAoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdjYW5jZWxsZWQnKVxuICAgICAgfVxuICAgIH0pXG4gICAgYFxuICAgIGV0Y2guaW5pdGlhbGl6ZSh0aGlzKVxuICB9XG5cbiAgZWxlbWVudEZvckl0ZW0gKGl0ZW0pIHtcbiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJylcbiAgICBsaS50ZXh0Q29udGVudCA9IGl0ZW1cbiAgICByZXR1cm4gbGlcbiAgfVxuXG4gIGRpZENvbmZpcm1TZWxlY3Rpb24gKGl0ZW0pIHtcbiAgICBjb25zb2xlLmxvZygnY29uZmlybWVkJywgaXRlbSlcbiAgfVxuXG4gIGRpZENhbmNlbFNlbGVjdGlvbiAoKSB7XG4gICAgY29uc29sZS5sb2coJ2NhbmNlbGxlZCcpXG4gIH1cblxuICByZW5kZXIgKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nZXhhbXBsZSc+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdleGFtcGxlLXJlbmRlcmVkJz5cbiAgICAgICAgICA8YXRvbS1wYW5lbCBjbGFzc05hbWU9J21vZGFsJz5cbiAgICAgICAgICAgIDxTZWxlY3RMaXN0Vmlld1xuICAgICAgICAgICAgICBpdGVtcz17WydvbmUnLCAndHdvJywgJ3RocmVlJ119XG4gICAgICAgICAgICAgIGVsZW1lbnRGb3JJdGVtPXt0aGlzLmVsZW1lbnRGb3JJdGVtLmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgIG9uRGlkQ29uZmlybVNlbGVjdGlvbj17dGhpcy5kaWRDb25maXJtU2VsZWN0aW9uLmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgIG9uRGlkQ2FuY2VsU2VsZWN0aW9uPXt0aGlzLmRpZENhbmNlbFNlbGVjdGlvbi5iaW5kKHRoaXMpfSAvPlxuICAgICAgICAgIDwvYXRvbS1wYW5lbD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdleGFtcGxlLWNvZGUgc2hvdy1leGFtcGxlLXNwYWNlLXBlbic+XG4gICAgICAgICAgPENvZGVCbG9jayBjc3NDbGFzcz0nZXhhbXBsZS1zcGFjZS1wZW4nIGdyYW1tYXJTY29wZU5hbWU9J3NvdXJjZS5qcycgY29kZT17dGhpcy5qc0V4YW1wbGVDb2RlfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIHVwZGF0ZSAoKSB7XG5cbiAgfVxufVxuIl19