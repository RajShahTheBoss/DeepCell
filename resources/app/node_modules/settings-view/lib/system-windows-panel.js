Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

/** @babel */
/** @jsx etch.dom */

var _atom = require('atom');

var _etch = require('etch');

var _etch2 = _interopRequireDefault(_etch);

var SystemPanel = (function () {
  function SystemPanel() {
    var _this = this;

    _classCallCheck(this, SystemPanel);

    _etch2['default'].initialize(this);
    this.subscriptions = new _atom.CompositeDisposable();
    this.subscriptions.add(atom.commands.add(this.element, {
      'core:move-up': function coreMoveUp() {
        _this.scrollUp();
      },
      'core:move-down': function coreMoveDown() {
        _this.scrollDown();
      },
      'core:page-up': function corePageUp() {
        _this.pageUp();
      },
      'core:page-down': function corePageDown() {
        _this.pageDown();
      },
      'core:move-to-top': function coreMoveToTop() {
        _this.scrollToTop();
      },
      'core:move-to-bottom': function coreMoveToBottom() {
        _this.scrollToBottom();
      }
    }));

    _atom.WinShell.fileHandler.isRegistered(function (i) {
      _this.refs.fileHandlerCheckbox.checked = i;
    });
    _atom.WinShell.fileContextMenu.isRegistered(function (i) {
      _this.refs.fileContextMenuCheckbox.checked = i;
    });
    _atom.WinShell.folderContextMenu.isRegistered(function (i) {
      _this.refs.folderContextMenuCheckbox.checked = i;
    });
  }

  _createClass(SystemPanel, [{
    key: 'destroy',
    value: function destroy() {
      this.subscriptions.dispose();
      return _etch2['default'].destroy(this);
    }
  }, {
    key: 'update',
    value: function update() {}
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _etch2['default'].dom(
        'div',
        { className: 'panels-item', tabIndex: '0' },
        _etch2['default'].dom(
          'form',
          { className: 'general-panel section' },
          _etch2['default'].dom(
            'div',
            { className: 'settings-panel' },
            _etch2['default'].dom(
              'div',
              { className: 'section-container' },
              _etch2['default'].dom(
                'div',
                { className: 'block section-heading icon icon-device-desktop' },
                'System Settings'
              ),
              _etch2['default'].dom(
                'div',
                { className: 'text icon icon-question' },
                'These settings determine how Atom integrates with your operating system.'
              ),
              _etch2['default'].dom(
                'div',
                { className: 'section-body' },
                _etch2['default'].dom(
                  'div',
                  { className: 'control-group' },
                  _etch2['default'].dom(
                    'div',
                    { className: 'controls' },
                    _etch2['default'].dom(
                      'div',
                      { className: 'checkbox' },
                      _etch2['default'].dom(
                        'label',
                        { 'for': 'system.windows.file-handler' },
                        _etch2['default'].dom('input', {
                          ref: 'fileHandlerCheckbox',
                          id: 'system.windows.file-handler',
                          className: 'input-checkbox',
                          type: 'checkbox',
                          onclick: function (e) {
                            _this2.setRegistration(_atom.WinShell.fileHandler, e.target.checked);
                          } }),
                        _etch2['default'].dom(
                          'div',
                          { className: 'setting-title' },
                          'Register as file handler'
                        ),
                        _etch2['default'].dom(
                          'div',
                          { className: 'setting-description' },
                          'Show ',
                          _atom.WinShell.appName,
                          ' in the "Open with" application list for easy association with file types.'
                        )
                      )
                    )
                  )
                ),
                _etch2['default'].dom(
                  'div',
                  { className: 'control-group' },
                  _etch2['default'].dom(
                    'div',
                    { className: 'controls' },
                    _etch2['default'].dom(
                      'div',
                      { className: 'checkbox' },
                      _etch2['default'].dom(
                        'label',
                        { 'for': 'system.windows.shell-menu-files' },
                        _etch2['default'].dom('input', {
                          ref: 'fileContextMenuCheckbox',
                          id: 'system.windows.shell-menu-files',
                          className: 'input-checkbox',
                          type: 'checkbox',
                          onclick: function (e) {
                            _this2.setRegistration(_atom.WinShell.fileContextMenu, e.target.checked);
                          } }),
                        _etch2['default'].dom(
                          'div',
                          { className: 'setting-title' },
                          'Show in file context menus'
                        ),
                        _etch2['default'].dom(
                          'div',
                          { className: 'setting-description' },
                          'Add "Open with ',
                          _atom.WinShell.appName,
                          '" to the File Explorer context menu for files.'
                        )
                      )
                    )
                  )
                ),
                _etch2['default'].dom(
                  'div',
                  { className: 'control-group' },
                  _etch2['default'].dom(
                    'div',
                    { className: 'controls' },
                    _etch2['default'].dom(
                      'div',
                      { className: 'checkbox' },
                      _etch2['default'].dom(
                        'label',
                        { 'for': 'system.windows.shell-menu-folders' },
                        _etch2['default'].dom('input', {
                          ref: 'folderContextMenuCheckbox',
                          id: 'system.windows.shell-menu-folders',
                          className: 'input-checkbox',
                          type: 'checkbox',
                          onclick: function (e) {
                            _this2.setRegistration(_atom.WinShell.folderContextMenu, e.target.checked);
                            _this2.setRegistration(_atom.WinShell.folderBackgroundContextMenu, e.target.checked);
                          } }),
                        _etch2['default'].dom(
                          'div',
                          { className: 'setting-title' },
                          'Show in folder context menus'
                        ),
                        _etch2['default'].dom(
                          'div',
                          { className: 'setting-description' },
                          'Add "Open with ',
                          _atom.WinShell.appName,
                          '" to the File Explorer context menu for folders.'
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }, {
    key: 'setRegistration',
    value: function setRegistration(option, shouldBeRegistered) {
      if (shouldBeRegistered) {
        return option.register(function () {});
      } else {
        return option.deregister(function () {});
      }
    }
  }, {
    key: 'focus',
    value: function focus() {
      this.element.focus();
    }
  }, {
    key: 'show',
    value: function show() {
      this.element.style.display = '';
    }
  }, {
    key: 'scrollUp',
    value: function scrollUp() {
      this.element.scrollTop -= document.body.offsetHeight / 20;
    }
  }, {
    key: 'scrollDown',
    value: function scrollDown() {
      this.element.scrollTop += document.body.offsetHeight / 20;
    }
  }, {
    key: 'pageUp',
    value: function pageUp() {
      this.element.scrollTop -= this.element.offsetHeight;
    }
  }, {
    key: 'pageDown',
    value: function pageDown() {
      this.element.scrollTop += this.element.offsetHeight;
    }
  }, {
    key: 'scrollToTop',
    value: function scrollToTop() {
      this.element.scrollTop = 0;
    }
  }, {
    key: 'scrollToBottom',
    value: function scrollToBottom() {
      this.element.scrollTop = this.element.scrollHeight;
    }
  }]);

  return SystemPanel;
})();

exports['default'] = SystemPanel;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,