Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @babel */
/** @jsx etch.dom */
/* eslint-disable react/no-unknown-property */

var _atom = require('atom');

var _etch = require('etch');

var _etch2 = _interopRequireDefault(_etch);

var _shell = require('shell');

var _shell2 = _interopRequireDefault(_shell);

var _atomLogo = require('./atom-logo');

var _atomLogo2 = _interopRequireDefault(_atomLogo);

var _etchComponent = require('../etch-component');

var _etchComponent2 = _interopRequireDefault(_etchComponent);

var _updateView = require('./update-view');

var _updateView2 = _interopRequireDefault(_updateView);

var AboutView = (function (_EtchComponent) {
  _inherits(AboutView, _EtchComponent);

  function AboutView() {
    _classCallCheck(this, AboutView);

    _get(Object.getPrototypeOf(AboutView.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(AboutView, [{
    key: 'handleVersionClick',
    value: function handleVersionClick(e) {
      e.preventDefault();
      atom.clipboard.write(this.props.currentVersion);
    }
  }, {
    key: 'handleReleaseNotesClick',
    value: function handleReleaseNotesClick(e) {
      e.preventDefault();
      _shell2['default'].openExternal(this.props.updateManager.getReleaseNotesURLForAvailableVersion());
    }
  }, {
    key: 'handleLicenseClick',
    value: function handleLicenseClick(e) {
      e.preventDefault();
      atom.commands.dispatch(atom.views.getView(atom.workspace), 'application:open-license');
    }
  }, {
    key: 'handleTermsOfUseClick',
    value: function handleTermsOfUseClick(e) {
      e.preventDefault();
      _shell2['default'].openExternal('https://help.github.com/articles/github-terms-of-service');
    }
  }, {
    key: 'render',
    value: function render() {
      return _etch2['default'].dom(
        'div',
        { className: 'pane-item native-key-bindings about' },
        _etch2['default'].dom(
          'div',
          { className: 'about-container' },
          _etch2['default'].dom(
            'header',
            { className: 'about-header' },
            _etch2['default'].dom(
              'a',
              { className: 'about-atom-io', href: 'https://atom.io/' },
              _etch2['default'].dom(_atomLogo2['default'], null)
            ),
            _etch2['default'].dom(
              'div',
              { className: 'about-header-info' },
              _etch2['default'].dom(
                'span',
                { className: 'about-version-container inline-block', onclick: this.handleVersionClick.bind(this) },
                _etch2['default'].dom(
                  'span',
                  { className: 'about-version' },
                  this.props.currentVersion,
                  ' ',
                  process.arch
                ),
                _etch2['default'].dom('span', { className: 'icon icon-clippy about-copy-version' })
              ),
              _etch2['default'].dom(
                'a',
                { className: 'about-header-release-notes', onclick: this.handleReleaseNotesClick.bind(this) },
                'Release Notes'
              )
            )
          ),
          _etch2['default'].dom(_updateView2['default'], { updateManager: this.props.updateManager, availableVersion: this.props.availableVersion, viewUpdateReleaseNotes: this.handleReleaseNotesClick.bind(this) }),
          _etch2['default'].dom(
            'div',
            { className: 'about-actions group-item' },
            _etch2['default'].dom(
              'div',
              { className: 'btn-group' },
              _etch2['default'].dom(
                'button',
                { className: 'btn view-license', onclick: this.handleLicenseClick.bind(this) },
                'License'
              ),
              _etch2['default'].dom(
                'button',
                { className: 'btn terms-of-use', onclick: this.handleTermsOfUseClick.bind(this) },
                'Terms of Use'
              )
            )
          ),
          _etch2['default'].dom(
            'div',
            { className: 'about-love group-start' },
            _etch2['default'].dom('span', { className: 'icon icon-code' }),
            _etch2['default'].dom(
              'span',
              { className: 'inline' },
              ' with '
            ),
            _etch2['default'].dom('span', { className: 'icon icon-heart' }),
            _etch2['default'].dom(
              'span',
              { className: 'inline' },
              ' by '
            ),
            _etch2['default'].dom('a', { className: 'icon icon-logo-github', href: 'https://github.com' })
          ),
          _etch2['default'].dom(
            'div',
            { className: 'about-credits group-item' },
            _etch2['default'].dom(
              'span',
              { className: 'inline' },
              'And the awesome '
            ),
            _etch2['default'].dom(
              'a',
              { href: 'https://github.com/atom/atom/contributors' },
              'Atom Community'
            )
          )
        )
      );
    }
  }, {
    key: 'serialize',
    value: function serialize() {
      return {
        deserializer: this.constructor.name,
        uri: this.props.uri
      };
    }
  }, {
    key: 'onDidChangeTitle',
    value: function onDidChangeTitle() {
      return new _atom.Disposable();
    }
  }, {
    key: 'onDidChangeModified',
    value: function onDidChangeModified() {
      return new _atom.Disposable();
    }
  }, {
    key: 'getTitle',
    value: function getTitle() {
      return 'About';
    }
  }, {
    key: 'getIconName',
    value: function getIconName() {
      return 'info';
    }
  }]);

  return AboutView;
})(_etchComponent2['default']);

exports['default'] = AboutView;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vQzovcHJvamVjdHMvYXRvbS9vdXQvYXBwL25vZGVfbW9kdWxlcy9hYm91dC9saWIvY29tcG9uZW50cy9hYm91dC12aWV3LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFJeUIsTUFBTTs7b0JBQ2QsTUFBTTs7OztxQkFDTCxPQUFPOzs7O3dCQUNKLGFBQWE7Ozs7NkJBQ1IsbUJBQW1COzs7OzBCQUN0QixlQUFlOzs7O0lBRWpCLFNBQVM7WUFBVCxTQUFTOztXQUFULFNBQVM7MEJBQVQsU0FBUzs7K0JBQVQsU0FBUzs7O2VBQVQsU0FBUzs7V0FDVCw0QkFBQyxDQUFDLEVBQUU7QUFDckIsT0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFBO0FBQ2xCLFVBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUE7S0FDaEQ7OztXQUV1QixpQ0FBQyxDQUFDLEVBQUU7QUFDMUIsT0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFBO0FBQ2xCLHlCQUFNLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxxQ0FBcUMsRUFBRSxDQUFDLENBQUE7S0FDckY7OztXQUVrQiw0QkFBQyxDQUFDLEVBQUU7QUFDckIsT0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFBO0FBQ2xCLFVBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSwwQkFBMEIsQ0FBQyxDQUFBO0tBQ3ZGOzs7V0FFcUIsK0JBQUMsQ0FBQyxFQUFFO0FBQ3hCLE9BQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQTtBQUNsQix5QkFBTSxZQUFZLENBQUMsMERBQTBELENBQUMsQ0FBQTtLQUMvRTs7O1dBRU0sa0JBQUc7QUFDUixhQUNFOztVQUFLLFNBQVMsRUFBQyxxQ0FBcUM7UUFDbEQ7O1lBQUssU0FBUyxFQUFDLGlCQUFpQjtVQUM5Qjs7Y0FBUSxTQUFTLEVBQUMsY0FBYztZQUM5Qjs7Z0JBQUcsU0FBUyxFQUFDLGVBQWUsRUFBQyxJQUFJLEVBQUMsa0JBQWtCO2NBQ2xELGtEQUFZO2FBQ1Y7WUFDSjs7Z0JBQUssU0FBUyxFQUFDLG1CQUFtQjtjQUNoQzs7a0JBQU0sU0FBUyxFQUFDLHNDQUFzQyxFQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxBQUFDO2dCQUNqRzs7b0JBQU0sU0FBUyxFQUFDLGVBQWU7a0JBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjOztrQkFBRyxPQUFPLENBQUMsSUFBSTtpQkFBUTtnQkFDakYsZ0NBQU0sU0FBUyxFQUFDLHFDQUFxQyxHQUFHO2VBQ25EO2NBQ1A7O2tCQUFHLFNBQVMsRUFBQyw0QkFBNEIsRUFBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQUFBQzs7ZUFBa0I7YUFDekc7V0FDQztVQUVULGlEQUFZLGFBQWEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQUFBQyxFQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEFBQUMsRUFBQyxzQkFBc0IsRUFBRSxJQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxBQUFDLEdBQUc7VUFFdks7O2NBQUssU0FBUyxFQUFDLDBCQUEwQjtZQUN2Qzs7Z0JBQUssU0FBUyxFQUFDLFdBQVc7Y0FDeEI7O2tCQUFRLFNBQVMsRUFBQyxrQkFBa0IsRUFBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQUFBQzs7ZUFBaUI7Y0FDbEc7O2tCQUFRLFNBQVMsRUFBQyxrQkFBa0IsRUFBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQUFBQzs7ZUFBc0I7YUFDdEc7V0FDRjtVQUVOOztjQUFLLFNBQVMsRUFBQyx3QkFBd0I7WUFDckMsZ0NBQU0sU0FBUyxFQUFDLGdCQUFnQixHQUFHO1lBQ25DOztnQkFBTSxTQUFTLEVBQUMsUUFBUTs7YUFBYztZQUN0QyxnQ0FBTSxTQUFTLEVBQUMsaUJBQWlCLEdBQUc7WUFDcEM7O2dCQUFNLFNBQVMsRUFBQyxRQUFROzthQUFZO1lBQ3BDLDZCQUFHLFNBQVMsRUFBQyx1QkFBdUIsRUFBQyxJQUFJLEVBQUMsb0JBQW9CLEdBQUc7V0FDN0Q7VUFFTjs7Y0FBSyxTQUFTLEVBQUMsMEJBQTBCO1lBQ3ZDOztnQkFBTSxTQUFTLEVBQUMsUUFBUTs7YUFBd0I7WUFDaEQ7O2dCQUFHLElBQUksRUFBQywyQ0FBMkM7O2FBQW1CO1dBQ2xFO1NBQ0Y7T0FDRixDQUNQO0tBQ0Y7OztXQUVTLHFCQUFHO0FBQ1gsYUFBTztBQUNMLG9CQUFZLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJO0FBQ25DLFdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUc7T0FDcEIsQ0FBQTtLQUNGOzs7V0FFZ0IsNEJBQUc7QUFDbEIsYUFBTyxzQkFBZ0IsQ0FBQTtLQUN4Qjs7O1dBRW1CLCtCQUFHO0FBQ3JCLGFBQU8sc0JBQWdCLENBQUE7S0FDeEI7OztXQUVRLG9CQUFHO0FBQ1YsYUFBTyxPQUFPLENBQUE7S0FDZjs7O1dBRVcsdUJBQUc7QUFDYixhQUFPLE1BQU0sQ0FBQTtLQUNkOzs7U0FyRmtCLFNBQVM7OztxQkFBVCxTQUFTIiwiZmlsZSI6ImZpbGU6Ly8vQzovcHJvamVjdHMvYXRvbS9vdXQvYXBwL25vZGVfbW9kdWxlcy9hYm91dC9saWIvY29tcG9uZW50cy9hYm91dC12aWV3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBiYWJlbCAqL1xuLyoqIEBqc3ggZXRjaC5kb20gKi9cbi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L25vLXVua25vd24tcHJvcGVydHkgKi9cblxuaW1wb3J0IHtEaXNwb3NhYmxlfSBmcm9tICdhdG9tJ1xuaW1wb3J0IGV0Y2ggZnJvbSAnZXRjaCdcbmltcG9ydCBzaGVsbCBmcm9tICdzaGVsbCdcbmltcG9ydCBBdG9tTG9nbyBmcm9tICcuL2F0b20tbG9nbydcbmltcG9ydCBFdGNoQ29tcG9uZW50IGZyb20gJy4uL2V0Y2gtY29tcG9uZW50J1xuaW1wb3J0IFVwZGF0ZVZpZXcgZnJvbSAnLi91cGRhdGUtdmlldydcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWJvdXRWaWV3IGV4dGVuZHMgRXRjaENvbXBvbmVudCB7XG4gIGhhbmRsZVZlcnNpb25DbGljayAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIGF0b20uY2xpcGJvYXJkLndyaXRlKHRoaXMucHJvcHMuY3VycmVudFZlcnNpb24pXG4gIH1cblxuICBoYW5kbGVSZWxlYXNlTm90ZXNDbGljayAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIHNoZWxsLm9wZW5FeHRlcm5hbCh0aGlzLnByb3BzLnVwZGF0ZU1hbmFnZXIuZ2V0UmVsZWFzZU5vdGVzVVJMRm9yQXZhaWxhYmxlVmVyc2lvbigpKVxuICB9XG5cbiAgaGFuZGxlTGljZW5zZUNsaWNrIChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgYXRvbS5jb21tYW5kcy5kaXNwYXRjaChhdG9tLnZpZXdzLmdldFZpZXcoYXRvbS53b3Jrc3BhY2UpLCAnYXBwbGljYXRpb246b3Blbi1saWNlbnNlJylcbiAgfVxuXG4gIGhhbmRsZVRlcm1zT2ZVc2VDbGljayAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIHNoZWxsLm9wZW5FeHRlcm5hbCgnaHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vYXJ0aWNsZXMvZ2l0aHViLXRlcm1zLW9mLXNlcnZpY2UnKVxuICB9XG5cbiAgcmVuZGVyICgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J3BhbmUtaXRlbSBuYXRpdmUta2V5LWJpbmRpbmdzIGFib3V0Jz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Fib3V0LWNvbnRhaW5lcic+XG4gICAgICAgICAgPGhlYWRlciBjbGFzc05hbWU9J2Fib3V0LWhlYWRlcic+XG4gICAgICAgICAgICA8YSBjbGFzc05hbWU9J2Fib3V0LWF0b20taW8nIGhyZWY9J2h0dHBzOi8vYXRvbS5pby8nPlxuICAgICAgICAgICAgICA8QXRvbUxvZ28gLz5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhYm91dC1oZWFkZXItaW5mbyc+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nYWJvdXQtdmVyc2lvbi1jb250YWluZXIgaW5saW5lLWJsb2NrJyBvbmNsaWNrPXt0aGlzLmhhbmRsZVZlcnNpb25DbGljay5iaW5kKHRoaXMpfT5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2Fib3V0LXZlcnNpb24nPnt0aGlzLnByb3BzLmN1cnJlbnRWZXJzaW9ufSB7cHJvY2Vzcy5hcmNofTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2ljb24gaWNvbi1jbGlwcHkgYWJvdXQtY29weS12ZXJzaW9uJyAvPlxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT0nYWJvdXQtaGVhZGVyLXJlbGVhc2Utbm90ZXMnIG9uY2xpY2s9e3RoaXMuaGFuZGxlUmVsZWFzZU5vdGVzQ2xpY2suYmluZCh0aGlzKX0+UmVsZWFzZSBOb3RlczwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvaGVhZGVyPlxuXG4gICAgICAgICAgPFVwZGF0ZVZpZXcgdXBkYXRlTWFuYWdlcj17dGhpcy5wcm9wcy51cGRhdGVNYW5hZ2VyfSBhdmFpbGFibGVWZXJzaW9uPXt0aGlzLnByb3BzLmF2YWlsYWJsZVZlcnNpb259IHZpZXdVcGRhdGVSZWxlYXNlTm90ZXM9e3RoaXMuaGFuZGxlUmVsZWFzZU5vdGVzQ2xpY2suYmluZCh0aGlzKX0gLz5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhYm91dC1hY3Rpb25zIGdyb3VwLWl0ZW0nPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2J0bi1ncm91cCc+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPSdidG4gdmlldy1saWNlbnNlJyBvbmNsaWNrPXt0aGlzLmhhbmRsZUxpY2Vuc2VDbGljay5iaW5kKHRoaXMpfT5MaWNlbnNlPC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPSdidG4gdGVybXMtb2YtdXNlJyBvbmNsaWNrPXt0aGlzLmhhbmRsZVRlcm1zT2ZVc2VDbGljay5iaW5kKHRoaXMpfT5UZXJtcyBvZiBVc2U8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Fib3V0LWxvdmUgZ3JvdXAtc3RhcnQnPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdpY29uIGljb24tY29kZScgLz5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0naW5saW5lJz4gd2l0aCA8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J2ljb24gaWNvbi1oZWFydCcgLz5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0naW5saW5lJz4gYnkgPC9zcGFuPlxuICAgICAgICAgICAgPGEgY2xhc3NOYW1lPSdpY29uIGljb24tbG9nby1naXRodWInIGhyZWY9J2h0dHBzOi8vZ2l0aHViLmNvbScgLz5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhYm91dC1jcmVkaXRzIGdyb3VwLWl0ZW0nPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdpbmxpbmUnPkFuZCB0aGUgYXdlc29tZSA8L3NwYW4+XG4gICAgICAgICAgICA8YSBocmVmPSdodHRwczovL2dpdGh1Yi5jb20vYXRvbS9hdG9tL2NvbnRyaWJ1dG9ycyc+QXRvbSBDb21tdW5pdHk8L2E+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgc2VyaWFsaXplICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGVzZXJpYWxpemVyOiB0aGlzLmNvbnN0cnVjdG9yLm5hbWUsXG4gICAgICB1cmk6IHRoaXMucHJvcHMudXJpXG4gICAgfVxuICB9XG5cbiAgb25EaWRDaGFuZ2VUaXRsZSAoKSB7XG4gICAgcmV0dXJuIG5ldyBEaXNwb3NhYmxlKClcbiAgfVxuXG4gIG9uRGlkQ2hhbmdlTW9kaWZpZWQgKCkge1xuICAgIHJldHVybiBuZXcgRGlzcG9zYWJsZSgpXG4gIH1cblxuICBnZXRUaXRsZSAoKSB7XG4gICAgcmV0dXJuICdBYm91dCdcbiAgfVxuXG4gIGdldEljb25OYW1lICgpIHtcbiAgICByZXR1cm4gJ2luZm8nXG4gIH1cbn1cbiJdfQ==